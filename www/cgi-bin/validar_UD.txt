dephead|erro: 1 - Token dependente de si próprio
token.head_token.id == token.id

dephead|erro: 2 - Ciclo na sentença
dephead == head_token.id and head_token.dephead == id and dephead != id

deprel|erro: 3 - Dephead não pode ser 0 se não for root
dephead == "0" and deprel != "root"

dephead|erro: 3 - Deprel não pode ser root se dephead não for 0
dephead != "0" and deprel == "root"

dephead|erro: 4 - DEPHEAD inválido
dephead != "\d+"

id|erro: 5 - ID inválido
id != "[0-9\-]+"

word|erro: 6 - Alguma anotação está vazia (sem underline)
id == ""
word == ""
lemma == ""
upos == ""
xpos == ""
dephead == ""
deprel == ""
deps == ""
misc == ""

deprel|erro: 7 - Token apontando na direção errada
deprel = "(appos|conj|fixed|compound|flat|flat:name)" and dephead > id
deprel = "(case|cc|mark|det|cop|aux)" and dephead < id and misc != ".*MWE.*"

deprel|erro: Adjetivação com gênero diferente
deprel = "amod|acl" and head_token.gender != gender

deprel|erro: Adjetivação com número diferente
deprel = "amod|acl" and head_token.number != number

feats|erro: Features incompatíveis com a classe gramatical
upos = "ADJ" and feats !== "Gender=Masc|Gender=Fem|Gender=Unsp|Number=Sing|Number=Plur|NumType=Ord"
upos = "ADV" and feats !== "_|Polarity=Neg"
upos = "AUX" and feats !== "Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Number=Plur|VerbForm=Inf|VerbForm=Ger|Tense=Fut|Mood=Cnd|Tense=Imp|Tense=Past|VerbForm=Part|Person=1|Mood=Sub|Mood=Imp|Person=2|Gender=Masc|Tense=Pqp"
upos = "CCONJ|INTJ|ADP|SCONJ|PUNCT|SYM|_" and feats !== "_"
upos = "DET" and feats !== "Definite=Def|Gender=Masc|Number=Sing|PronType=Art|Definite=Ind|Gender=Fem|Number=Plur|PronType=Ind|PronType=Dem|PronType=Prs|PronType=Tot|PronType=Neg|PronType=Emp|PronType=Int|PronType=Rel|Gender=Unsp|Number=Unsp"
upos = "(NOUN|PROPN)" and feats !== "Gender=Masc|Number=Sing|Gender=Fem|Number=Plur|Gender=Unsp|Foreign=Yes|Number=Unsp"
upos = "NUM" and feats !== "NumType=Card|Gender=Masc|Gender=Fem|Number=Sing|NumType=Mult|Number=Plur|NumType=Ord|NumType=Frac|Definite=Ind|PronType=Art|NumType=Sets|NumType=Range"
upos = "PART" and feats !== "_|Gender=Masc|Number=Sing"
upos = "PRON" and feats !== "Gender=Masc|Number=Sing|PronType=Dem|PronType=Rel|Case=Acc|Person=3|PronType=Prs|Case=Nom|Number=Plur|PronType=Int|Gender=Fem|PronType=Ind|Gender=Unsp|Person=1|Definite=Def|PronType=Art|Case=Dat|PronType=Tot|PronType=Neg|Number=Unsp|VerbForm=Ger|Person=2|Definite=Ind" and deprel != "expl"
upos = "VERB" and feats !== "Number=Sing|VerbForm=Part|Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin|VerbForm=Ger|Number=Plur|VerbForm=Inf|Voice=Pass|Tense=Past|Tense=Fut|Gender=Masc|Gender=Fem|Mood=Sub|Tense=Imp|Person=1|Mood=Cnd|Tense=Pqp|Person=2|Mood=Imp"
upos = "X" and feats !== "_|Gender=Masc|Number=Sing|Gender=Fem|Number=Plur"

upos|erro: UPOS inválido
upos != "(ADJ|ADV|AUX|CCONJ|INTJ|ADP|SCONJ|PUNCT|SYM|_|DET|NOUN|NUM|PART|PRON|PROPN|VERB|X)"

upos|erro: Este deprel deve ter upos NOUN, PRON, PROPN, SYM ou NUM
@head_token.deprel = "obl" and head_token.upos != "(NOUN|PRON|PROPN|SYM|NUM)" and deprel != "(fixed|compound|flat|flat:name)"

deprel|erro: DEPREL inválido
deprel != "(root|_|case|det|nmod|parataxis|nsubj|flat:name|acl|advmod|obj|amod|punct|appos|nummod|acl:relcl|ccomp|fixed|obl|cop|cc|conj|mark|expl|xcomp|aux|nsubj:pass|aux:pass|obl:agent|iobj|csubj|compound|advcl|flat|dep|flat:foreign|discourse|vocative|orphan|dislocated|reparandum|goeswith|appos:parataxis|ccomp:parataxis|appos:transl|nmod:appos)"

upos|erro: acl:relcl deve ser filha de nome
@head_token.upos != "NOUN|PRON" and deprel = "acl:relcl"

upos|erro: conj deve ser subordinado à mesma POS
@deprel = "conj" and head_token.upos != upos

misc|erro: MISC inválido
misc !== "MWE=.*|MWEPOS=.*|Spaces?After=.*|d2d:.*|ChangedBy=.*|_|start_char=.*|end_char=.*"

deprel|erro: O pai deste token não pode ter dependentes
head_token.deprel == "(cc|case|det|flat:name|fixed|compound)" and @deprel != "(fixed|compound|flat|flat:name)" and head_token.misc != ".*MWE.*"

upos|erro: Este upos não pode ter deprel "det"
upos != "DET" and deprel = "det"

deprel|erro: DET deve ter deprel "det"
upos = "DET" and deprel != "det|fixed|flat:name" and misc != ".*MWE.*"

deprel|erro: ADP deve ter deprel "case"
upos = "ADP" and deprel != "case|fixed|flat:name|compound" and misc != ".*MWE.*"

deprel|erro: ADP não pode ter filho
head_token.upos = "ADP" and @deprel != "(fixed|compound|flat|flat:name)"

deprel|erro: SCONJ deve ter deprel "mark"
upos = "SCONJ" and deprel != "mark|fixed" and misc != ".*MWE.*"

upos|erro: Este upos não pode ter deprel "mark"
upos != "SCONJ" and deprel = "mark" and misc != ".*MWE.*"

upos|erro: Este upos não pode ter deprel "cc"
upos != "CCONJ" and deprel == "cc" and misc != ".*MWE.*"

deprel|erro: CCONJ deve ter deprel "cc"
upos = "CCONJ" and deprel != "cc" and misc != ".*MWE.*"

upos|erro: Este upos não pode ter ter deprel "aux"
upos != "AUX" and deprel == "aux" and misc != ".*MWE.*"

deprel|erro: AUX deve ter deprel "aux" ou "cop"
upos = "AUX" and deprel != "(aux|aux:pass|cop)" and misc != ".*MWE.*"

deprel|erro: ADV deve ser advmod
deprel = "advmod" and upos != "ADV" and misc != ".*MWE.*"
deprel != "advmod|fixed|compound" and upos = "ADV"

feats|erro: VERB deve ter feats VerbForm
upos = "(AUX|VERB)" and feats != ".*VerbForm=.*"

feats|erro: DET e PRON devem ter feats PronType e/ou Definite
upos = "DET|PRON" and feats != ".*PronType=.*" and deprel != "expl"
upos != "DET|PRON" and feats = ".*PronType=.*"
upos != "DET|PRON.*" and feats = ".*Definite=.*"
feats = ".*PronType=Art.*" and feats != ".*Definite=.*"
feats = ".*Definite=.*" and feats != ".*PronType=Art.*"

upos|erro: < > seguido de link deve apontar para o link
word = ">" and previous_token.word = "http.*" and dephead != previous_token.id
word = "<" and next_token.word = "http.*" and dephead != next_token.id

upos|erro: Quando "algum" é seguido de ADP, "algum" deve ser PRON indefinido
lemma = "algum" and next_token.upos = "ADP" and upos != "PRON"

upos|erro: "Algum" deve ser PRON ou DET indefinido
lemma = "algum" and upos != "PRON|DET"
lemma = "algum" and feats != ".*PronType=Ind.*"

deprel|erro: Possível caso de voz passiva sem obl:agent
lemma = "por" and @head_token.deprel != "obl:agent" and head_token.head_token.feats = ".*VerbForm=Part.*"
